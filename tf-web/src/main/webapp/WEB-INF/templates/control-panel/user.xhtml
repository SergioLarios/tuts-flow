<!DOCTYPE html SYSTEM "http://www.thymeleaf.org/dtd/xhtml1-strict-thymeleaf-spring3-3.dtd">

<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:th="http://www.thymeleaf.org">

	<head>
		<title>Control Panel : USER</title>
	</head>
	
	<body>
		<!--/* Content */-->
		
		<div th:fragment="main">
			
			<div class="page-header">
				<h1 th:text="#{cp.user}"/>
			</div>
		
			<div id="userDataTable"/>
			<div id="userPagination"/>
		
			<!-- *************************** -->
			<!--  JavaScript	             -->
			<!-- *************************** -->
		
			<script type="text/javascript" th:inline="javascript">
			/*<![CDATA[*/
				
			YUI().use('aui-datatable', 'aui-pagination', 'aui-io-request', function(Y) {
                       
				var page = 0;
				var size = 5;
				var table;
				
				// ***** Initial Render *****
				
				createPagination('#userPagination');
				
				// ***** END Initial Render *****
				
				// Pagination
				
				function createPagination(node){
					
					new Y.Pagination({
						page: 1,
						offset: 1,
						total: 3,
						circular: false,
						strings: {
				          next: '»',
				          prev: '«'
				        },
				        after: {
				        	changeRequest: function(event) {
				        		findData(event.state.page - 1, size, '#userDataTable');
				        	}
				        }
					}).render(node);
					
				}
				
				// Ajax call

				function findData(inPage, inSize, node) {

					var outData = null;

					Y.io.request(
						[[@{${T(org.tutsflow.constant.Services).USER}}]] +'/' + inPage + '/' + inSize,
						{
							dataType: 'json',
							on: {
								success: function() {
									
									resData = this.get('responseData');
									
									if (!table) {
										createTable(resData);
										table.render(node);
									}
									else {
										table.set('data', resData);
									}
									
								}
							}
						}
					);

				}

				// Data table creation
				
                function createTable(inData) {
					
                	table = new Y.DataTable({
                        
    					columns: [
    						{ key: 'userName', label: 'Name' },
    						{ key: 'userNameSimple', label: 'NameSimple' },
    						{ key: 'mail', label: 'Mail' },
    						{ key: 'type', label: 'Type', formatter:function(o){
    							if (o.data.type === 2) {
    								return 'admin';
    							}
    							else {
    								return 'normal';
    							}
    							
    						}}
    					],
    					data: inData
    					
    				});
                	
				}
				
			});

			/*]]>*/
			</script>
		
		</div>
	
	</body>
	
</html>